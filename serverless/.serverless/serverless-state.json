{
  "service": {
    "service": "serverless-example",
    "serviceObject": {
      "name": "serverless-example"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "memorySize": 512,
      "region": "ap-southeast-1",
      "profile": "default",
      "deploymentMethod": "direct",
      "deploymentBucket": "aws-migration-sls-deployment",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ProfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-example-dev-profile"
            }
          },
          "ProductLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/serverless-example-dev-product"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-example",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-example-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/serverless-example-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-example",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ProfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "aws-migration-sls-deployment",
                "S3Key": "serverless/serverless-example/dev/1688306354521-2023-07-02T13:59:14.521Z/serverless-example.zip"
              },
              "Handler": "src/lambda.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "serverless-example-dev-profile",
              "MemorySize": 512,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ProfileLogGroup"
            ]
          },
          "ProductLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "aws-migration-sls-deployment",
                "S3Key": "serverless/serverless-example/dev/1688306354521-2023-07-02T13:59:14.521Z/serverless-example.zip"
              },
              "Handler": "src/lambda.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "serverless-example-dev-product",
              "MemorySize": 512,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ProductLogGroup"
            ]
          },
          "ProfileLambdaVersionGZJWEwRGVLRyAqizrwNdPYJflnrbs2HgV4Dx7aB7yM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProfileLambdaFunction"
              },
              "CodeSha256": "boKypFmnnVTFRfAo5pOiAb17xoxnn6aHYBBl5a39P9A="
            }
          },
          "ProductLambdaVersionVzTVihLkapcnB6lM7SMyg8YB0jUbNExYb6ukKHvU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProductLambdaFunction"
              },
              "CodeSha256": "boKypFmnnVTFRfAo5pOiAb17xoxnn6aHYBBl5a39P9A="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-example",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProfiles": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "profiles",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProfilesAnyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProfiles"
              },
              "PathPart": "{any+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProducts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "products",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceProductsAnyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceProducts"
              },
              "PathPart": "{any+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProfilesAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfiles"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProfilesAnyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProfilesAnyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ProfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProductsAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProducts"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ProductLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProductsAnyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProductsAnyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ProductLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ProductLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1688306336022": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodProfilesAny",
              "ApiGatewayMethodProfilesAnyVarAny",
              "ApiGatewayMethodProductsAny",
              "ApiGatewayMethodProductsAnyVarAny"
            ]
          },
          "ProfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ProductLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProductLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "aws-migration-sls-deployment",
            "Export": {
              "Name": "sls-serverless-example-dev-ServerlessDeploymentBucketName"
            }
          },
          "ProfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProfileLambdaVersionGZJWEwRGVLRyAqizrwNdPYJflnrbs2HgV4Dx7aB7yM"
            },
            "Export": {
              "Name": "sls-serverless-example-dev-ProfileLambdaFunctionQualifiedArn"
            }
          },
          "ProductLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProductLambdaVersionVzTVihLkapcnB6lM7SMyg8YB0jUbNExYb6ukKHvU"
            },
            "Export": {
              "Name": "sls-serverless-example-dev-ProductLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-example-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-typescript",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "profile": {
        "handler": "src/lambda.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "profiles",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "any",
              "path": "profiles/{any+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-example-dev-profile",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 512,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "ProfileLambdaVersionGZJWEwRGVLRyAqizrwNdPYJflnrbs2HgV4Dx7aB7yM"
      },
      "product": {
        "handler": "src/lambda.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "products",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "any",
              "path": "products/{any+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "serverless-example-dev-product",
        "package": {
          "exclude": [
            "node_modules/serverless-plugin-typescript"
          ],
          "include": [],
          "patterns": []
        },
        "memory": 512,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "ProductLambdaVersionVzTVihLkapcnB6lM7SMyg8YB0jUbNExYb6ukKHvU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "serverless-example",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/araiva/aws-migrate-nestjs/serverless/.build/.serverless/serverless-example.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/serverless-example/dev/1688306354521-2023-07-02T13:59:14.521Z",
    "artifact": "serverless-example.zip"
  }
}